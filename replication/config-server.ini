[modules]
dsn.tools.common
dsn.tools.nfs
dsn.dist.service.meta_server
dsn.dist.service.stateful.type1

[apps..default]
run = true
count = 1
;network.client.RPC_CHANNEL_TCP = dsn::tools::sim_network_provider, 65536
;network.client.RPC_CHANNEL_UDP = dsn::tools::sim_network_provider, 65536
;network.server.0.RPC_CHANNEL_TCP = dsn::tools::sim_network_provider, 65536

[apps.meta]
type = meta
dmodule = dsn.dist.service.meta_server
arguments = 
ports = 34601
pools = THREAD_POOL_DEFAULT,THREAD_POOL_META_SERVER,THREAD_POOL_META_STATE,THREAD_POOL_FD,THREAD_POOL_DLOCK
run = true
count = @META_COUNT@

[apps.replica]
type = replica
dmodule = dsn.dist.service.stateful.type1
arguments =
ports = 34801
pools = THREAD_POOL_DEFAULT,THREAD_POOL_REPLICATION_LONG,THREAD_POOL_REPLICATION,THREAD_POOL_FD,THREAD_POOL_LOCAL_APP
run = true
count = @REPLICA_COUNT@

[core]
;tool = simulator
;tool = fastrun
tool = nativerun
;toollets = tracer
;toollets = tracer, profiler, fault_injector
pause_on_start = false
cli_local = false
cli_remote = false

;aio_factory_name = dsn::tools::native_aio_provider
start_nfs = true

logging_start_level = LOG_LEVEL_DEBUG
logging_factory_name = dsn::tools::simple_logger
;logging_factory_name = dsn::tools::screen_logger
logging_flush_on_exit = false

[tools.simple_logger]
short_header = false
fast_flush = true
max_number_of_log_files_on_disk = 10000
stderr_start_level = LOG_LEVEL_ERROR

[tools.simulator]
random_seed = 0

[network]
; how many network threads for network library(used by asio)
io_service_worker_count = 4

; specification for each thread pool
[threadpool..default]
worker_count = 4

[threadpool.THREAD_POOL_DEFAULT]
name = default
partitioned = false
max_input_queue_length = 1024
worker_priority = THREAD_xPRIORITY_NORMAL
worker_count = 4

[threadpool.THREAD_POOL_REPLICATION]
name = replica
partitioned = true
max_input_queue_length = 2560
worker_priority = THREAD_xPRIORITY_NORMAL
worker_count = 4

[threadpool.THREAD_POOL_REPLICATION_LONG]
name = replica_long

[threadpool.THREAD_POOL_LOCAL_APP]
name = local_app

[threadpool.THREAD_POOL_FD]
name = fd

[threadpool.THREAD_POOL_META_STATE]
name = meta_state
worker_count = 1

[threadpool.THREAD_POOL_DLOCK]
name = dlock
partitioned = true
worker_count = 2

[task..default]
is_trace = false
is_profile = false
allow_inline = false
fast_execution_in_network_thread = false
rpc_call_header_format = NET_HDR_DSN
rpc_call_channel = RPC_CHANNEL_TCP
rpc_timeout_milliseconds = 5000

disk_write_fail_ratio = 0.0
disk_read_fail_ratio = 0.0

perf_test_rounds = 1000
perf_test_payload_bytes = 1024
perf_test_timeouts_ms = 10000
; perf_test_concurrent_count is used only when perf_test_concurrent is true:
;   - if perf_test_concurrent_count == 0, means concurrency grow exponentially.
;   - if perf_test_concurrent_count >  0, means concurrency maintained to a fixed number.
perf_test_concurrent = true
perf_test_concurrent_count = 20

[task.LPC_AIO_IMMEDIATE_CALLBACK]
is_trace = false
allow_inline = false

[task.LPC_RPC_TIMEOUT]
is_trace = false

[task.RPC_FD_FAILURE_DETECTOR_PING]
is_trace = false
rpc_call_header_format = NET_HDR_DSN
rpc_call_channel = RPC_CHANNEL_UDP
rpc_message_crc_required = true

[task.RPC_FD_FAILURE_DETECTOR_PING_ACK]
is_trace = false
rpc_call_header_format = NET_HDR_DSN
rpc_call_channel = RPC_CHANNEL_UDP
rpc_message_crc_required = true

[task.LPC_BEACON_CHECK]
is_trace = false

[meta_server]
server_list = @LOCAL_IP@:34601, @LOCAL_IP@:34602, @LOCAL_IP@:34603
cluster_root = /pegasus/tc
meta_state_service_type = meta_state_service_zookeeper
meta_state_service_parameters =
distributed_lock_service_type = distributed_lock_service_zookeeper
distributed_lock_service_parameters = /pegasus/tc/lock
server_load_balancer_type = greedy_load_balancer

[replication.app]
app_name = @APP_NAME@
app_type = rrdb
partition_count = @PARTITION_COUNT@
max_replica_count = 3
stateful = true
package_id = 

[replication]
delay_for_fd_timeout_on_start = false
verbose_log_on_commit = true
empty_write_disabled = false

prepare_timeout_ms_for_secondaries = 1000
prepare_timeout_ms_for_potential_secondaries = 3000

batch_write_disabled = false
staleness_for_commit = 20
max_mutation_count_in_prepare_list = 110
mutation_2pc_min_replica_count = 2

group_check_disabled = false
group_check_interval_ms = 100000

checkpoint_disabled = false
checkpoint_interval_seconds = 100
checkpoint_min_decree_gap = 10000
checkpoint_max_interval_hours = 24

gc_disabled = false
gc_interval_ms = 30000
gc_memory_replica_interval_ms = 300000
gc_disk_error_replica_interval_seconds = 172800000

fd_disabled = false
fd_check_interval_seconds = 5
fd_beacon_interval_seconds = 3
fd_lease_seconds = 10
fd_grace_seconds = 15

log_private_file_size_mb = 32
log_private_batch_buffer_kb = 512
log_private_batch_buffer_count = 512

log_shared_file_size_mb = 32
log_shared_batch_buffer_kb = 0
log_shared_force_flush = false

config_sync_disabled = false
config_sync_interval_ms = 30000

lb_interval_ms = 10000

rocksdb_verbose_log = true
rocksdb_write_buffer_size = 10485760

[task.RPC_RRDB_RRDB_PUT]
rpc_request_is_write_operation = true
rpc_request_throttling_mode = TM_DELAY
rpc_request_delays_milliseconds = 1000, 1000, 1000, 1000, 1000, 10000
[task.RPC_RRDB_RRDB_REMOVE]
rpc_request_is_write_operation = true
rpc_request_throttling_mode = TM_DELAY
rpc_request_delays_milliseconds = 1000, 1000, 1000, 1000, 1000, 10000
[task.RPC_RRDB_RRDB_GET]
rpc_request_is_write_operation = false
rpc_request_throttling_mode = TM_DELAY
rpc_request_delays_milliseconds = 1000, 1000, 1000, 1000, 1000, 10000

[zookeeper]
hosts_list = 127.0.0.1:22181
timeout_ms = 10000
logfile = zoo.log

